#+SETUPFILE: ~/Public/github/org-html-themes/setup/theme-readtheorg.setup
#+LATEX_HEADER: \usepackage{ulem}
#+LATEX_HEADER: \usepackage{ctex}
#+LaTeX_HEADER: \sectionfont{\normalfont\scshape}
#+OPTIONS: num:nil
#+LaTeX_HEADER: \subsectionfont{\normalfont\itshape}

#+TITLE: The Go Programming Language

* 1. Tutorial
** 1.1 Hello, World
   #+caption: helloworld
   #+include: "src/ch1/helloworld.go" src go
** 1.2 Command-Line Arguments
   #+caption: echo1
   #+include: "src/ch1/echo1.go" src go

   #+begin_src go
     for initialization; condition; post { // { must be the same line
       // zero or more statement
     }
   #+end_src

   #+begin_src go
     // a traditional "while" loop
     for condition {
       // ...
     }
   #+end_src

   #+begin_src go
     // infinite loop
     for {
       // ...
     }
   #+end_src

   ~_~: syntax requires a variable name but program logic does not
   #+caption: echo2
   #+include: "src/ch1/echo2.go" src go

   declare a string variable
   #+begin_src go
     s := ""
     var s string
     var s = ""
     var s string = ""
   #+end_src

   #+caption: echo3
   #+include: "src/ch1/echo3.go" src go

   - Exercise 1.1
     #+caption: Modify the echo program to also print os.Args[0]
     #+include: "src/ch1/ex1.1.go" src go
   - Exercise 1.2
     #+caption: Modify the echo program to print the index and value of each of its arguments, one per line.
     #+include: "src/ch1/ex1.2.go" src go
   - Exercise 1.3
     #+begin_src sh

       ➜   time go run echo1.go hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe kljsdkla jlkd jflksadj gklajsdlkqjkle jklasd jfklsad jklfqj eklf jdslka jlks jdgklasdj
       hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe kljsdkla jlkd jflksadj gklajsdlkqjkle jklasd jfklsad jklfqj eklf jdslka jlks jdgklasdj
       go run echo1.go hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe  jlkd   *0.21s user 0.22s system 71% cpu 0.591 total*

       ➜   time go run echo2.go hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe kljsdkla jlkd jflksadj gklajsdlkqjkle jklasd jfklsad jklfqj eklf jdslka jlks jdgklasdj
       hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe kljsdkla jlkd jflksadj gklajsdlkqjkle jklasd jfklsad jklfqj eklf jdslka jlks jdgklasdj
       go run echo2.go hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe  jlkd   *0.22s user 0.17s system 105% cpu 0.370 total*

       ➜   time go run echo3.go hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe kljsdkla jlkd jflksadj gklajsdlkqjkle jklasd jfklsad jklfqj eklf jdslka jlks jdgklasdj
       hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe kljsdkla jlkd jflksadj gklajsdlkqjkle jklasd jfklsad jklfqj eklf jdslka jlks jdgklasdj
       go run echo3.go hello world zhou shang sakljglksa sadlkjgklsad kjlqjwe  jlkd   *0.22s user 0.16s system 139% cpu 0.272 total*
     #+end_src

** 1.3 Finding Duplicate Lines
   #+caption: dup1
   #+include: "src/ch1/dup1.go" src go
   [[file:~/Documents/Practice/go/src/The%20Go%20Programming%20Language/ch1/dup2/main.go:://%20Dup2%20prints%20the%20count%20and%20text%20of%20lines%20that%20appear%20more%20than][dup2]]
** Animated GIFs
** Fetching a URL
** Fetching URLs Concurrently
** A Web Server
** Loose Ends
* Program Structure
** Names
** Declarations
   [[file:~/Documents/Practice/go/src/The%20Go%20Programming%20Language/ch2/boiling/main.go:://%20Boiling%20prints%20the%20boiling%20point%20of%20water][boiling]]
** Variables
** Assignments
** Type Declarations
** Packages and Files
** Scope
* Basic Data Types
* Composite Types
* Functions
* Methods
* Interfaces
* Goroutines and Channels
* Concurrency with Shared Variables
* Packages and the Go Tool
* Testing
* Reflection
* Low-Level Programming
* Index
